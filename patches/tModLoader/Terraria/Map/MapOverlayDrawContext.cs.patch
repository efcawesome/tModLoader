--- src/TerrariaNetCore/Terraria/Map/MapOverlayDrawContext.cs
+++ src/tModLoader/Terraria/Map/MapOverlayDrawContext.cs
@@ -33,8 +_,10 @@
 		_drawScale = drawScale;
 	}
 
+	/// <inheritdoc cref="Draw(Texture2D, Vector2, Color, SpriteFrame, float, float, Alignment)"/>
 	public DrawResult Draw(Texture2D texture, Vector2 position, Alignment alignment) => Draw(texture, position, new SpriteFrame(1, 1), alignment);
 
+	/// <inheritdoc cref="Draw(Texture2D, Vector2, Color, SpriteFrame, float, float, Alignment)"/>
 	public DrawResult Draw(Texture2D texture, Vector2 position, SpriteFrame frame, Alignment alignment)
 	{
 		position = (position - _mapPosition) * _mapScale + _mapOffset;
@@ -48,6 +_,10 @@
 		return new DrawResult(new Rectangle((int)position.X, (int)position.Y, (int)((float)texture.Width * _drawScale), (int)((float)texture.Height * _drawScale)).Contains(Main.MouseScreen.ToPoint()));
 	}
 
+	/// <summary>
+	/// Draws the texture (icon) over the map using the provided arguments. Check the returned <see cref="DrawResult.IsMouseOver"/> to check if the mouse is hovering over this icon. This is usually used to assign the <c>text</c> parameter of <see cref="ModLoader.ModMapLayer.Draw(ref MapOverlayDrawContext, ref string)"/> to the hover text of the icon.
+	/// <para/> Note that the <paramref name="position"/> argument expects tile coordinates expressed as a Vector2. Don't scale tile coordinates to world coordinates by multiplying by 16. If you are working with world coordinates you'll need to divide them by 16 to convert them to tile coordinates.
+	/// </summary>
 	public DrawResult Draw(Texture2D texture, Vector2 position, Color color, SpriteFrame frame, float scaleIfNotSelected, float scaleIfSelected, Alignment alignment)
 	{
 		position = (position - _mapPosition) * _mapScale + _mapOffset;
